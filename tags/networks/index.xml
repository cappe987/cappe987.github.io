<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>networks on Casper Andersson</title><link>https://casan.se/tags/networks/</link><description>Recent content in networks on Casper Andersson</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 05 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://casan.se/tags/networks/index.xml" rel="self" type="application/rss+xml"/><item><title>PTP and timestamping methods</title><link>https://casan.se/blog/ptp-and-timestamping-methods/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://casan.se/blog/ptp-and-timestamping-methods/</guid><description>Computers in networks traditionally don&amp;rsquo;t have any knowledge of when other computers can/will transmit data. Dozens of devices transmitting data whenever they want will inevitably lead to collisions and congestions at one point or another, which in turn leads to packets not arriving as soon as they should. Packets arriving later than intended may affect what the receiver should do with it.</description></item><item><title>Hexend - Send raw hex frames</title><link>https://casan.se/blog/hexend-send-raw-hex-frames/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/hexend-send-raw-hex-frames/</guid><description>In my daily work I sometimes want to copy and modify raw frames as hexdumps. I will usually copy a hexdump from Wireshark or Tcpdump. Some times I have, however, written frames from scratch. Not very complex ones; nevertheless, it is nice to have the possibility to.
There are plenty of tools out there for building and sending frames.</description></item><item><title>TSN: Time-Aware Shaper</title><link>https://casan.se/blog/tsn-time-aware-shaper/</link><pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/tsn-time-aware-shaper/</guid><description>Let&amp;rsquo;s dive a little deeper into Time-Aware Shapers, specified in the IEEE 802.1Qbv standard. For a light introduction go read my intro to TSN.
Gates # The shapers are applied on egress and each shaper has a list of time slots, where each time slot specifies a duration, operation, and gate_mask.</description></item><item><title>What is Time-Sensitive Networking?</title><link>https://casan.se/blog/what-is-time-sensitive-networking/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/what-is-time-sensitive-networking/</guid><description>Disclaimer! I am in no way an expert at this. I&amp;rsquo;m learning it as part of a research project at work. This will be the first post in what I hope to be a series of posts on TSN. What is it? # Time-Sensitive Networking (TSN) is a topic in the networking world where there exists data frames that absolutely must arrive within a limited time.</description></item><item><title>Network bridge forwarding and learning</title><link>https://casan.se/blog/network-bridge-forwarding-and-learning/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/network-bridge-forwarding-and-learning/</guid><description>A network switch has multiple ports to send and receive data on. To manage this there is a component called &amp;ldquo;bridge&amp;rdquo; inside it. In Linux the bridge is defined as a network interface, but it it can also be offloaded to hardware (at least parts of it). The bridge is responsible for connecting different networks with each other.</description></item></channel></rss>