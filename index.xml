<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Casper Andersson</title><link>https://casan.se/</link><description>Recent content on Casper Andersson</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 05 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://casan.se/index.xml" rel="self" type="application/rss+xml"/><item><title>PTP and timestamping methods</title><link>https://casan.se/blog/ptp-and-timestamping-methods/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://casan.se/blog/ptp-and-timestamping-methods/</guid><description>Computers in networks traditionally don&amp;rsquo;t have any knowledge of when other computers can/will transmit data. Dozens of devices transmitting data whenever they want will inevitably lead to collisions and congestions at one point or another, which in turn leads to packets not arriving as soon as they should. Packets arriving later than intended may affect what the receiver should do with it.</description></item><item><title>Jekyll markdown lists that don't start on 1.</title><link>https://casan.se/blog/jekyll-markdown-lists-that-dont-start-on-1./</link><pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate><guid>https://casan.se/blog/jekyll-markdown-lists-that-dont-start-on-1./</guid><description>This is just a short note to myself and anyone who encounters the same issue. While writing a post recently I wanted a numbered list that started with a number other than 1. Frustratingly, Jekyll does not support this. Jekyll always start lists with 1. I found this very inconvenient and tried to find a way around it.</description></item><item><title>Hexend - Send raw hex frames</title><link>https://casan.se/blog/hexend-send-raw-hex-frames/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/hexend-send-raw-hex-frames/</guid><description>In my daily work I sometimes want to copy and modify raw frames as hexdumps. I will usually copy a hexdump from Wireshark or Tcpdump. Some times I have, however, written frames from scratch. Not very complex ones; nevertheless, it is nice to have the possibility to.
There are plenty of tools out there for building and sending frames.</description></item><item><title>The day Make started crashing</title><link>https://casan.se/blog/the-day-make-started-crashing/</link><pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/the-day-make-started-crashing/</guid><description>This is a short story from $DAYJOB about my discovery and investigations of an issue with the build system.
One day when building our code I suddenly got a segmentation fault when building. An odd occurrence. I could not recall any changes to the build system and checking the Git log I could not find any changes that would affect it.</description></item><item><title>A simpler life without sudo</title><link>https://casan.se/blog/a-simpler-life-without-sudo/</link><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/a-simpler-life-without-sudo/</guid><description>A couple months ago a colleague showed me his post on a life without sudo. In it he demonstrates the elegant use of Linux capabilities(7). If you aren&amp;rsquo;t familiar with capabilities I recommend reading his post first. I started using it myself and found it incredibly convenient. I would run sudo many times per day before.</description></item><item><title>TSN: Time-Aware Shaper</title><link>https://casan.se/blog/tsn-time-aware-shaper/</link><pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/tsn-time-aware-shaper/</guid><description>Let&amp;rsquo;s dive a little deeper into Time-Aware Shapers, specified in the IEEE 802.1Qbv standard. For a light introduction go read my intro to TSN.
Gates # The shapers are applied on egress and each shaper has a list of time slots, where each time slot specifies a duration, operation, and gate_mask.</description></item><item><title>What is Time-Sensitive Networking?</title><link>https://casan.se/blog/what-is-time-sensitive-networking/</link><pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/what-is-time-sensitive-networking/</guid><description>Disclaimer! I am in no way an expert at this. I&amp;rsquo;m learning it as part of a research project at work. This will be the first post in what I hope to be a series of posts on TSN. What is it? # Time-Sensitive Networking (TSN) is a topic in the networking world where there exists data frames that absolutely must arrive within a limited time.</description></item><item><title>Network bridge forwarding and learning</title><link>https://casan.se/blog/network-bridge-forwarding-and-learning/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/network-bridge-forwarding-and-learning/</guid><description>A network switch has multiple ports to send and receive data on. To manage this there is a component called &amp;ldquo;bridge&amp;rdquo; inside it. In Linux the bridge is defined as a network interface, but it it can also be offloaded to hardware (at least parts of it). The bridge is responsible for connecting different networks with each other.</description></item><item><title>Nondeterministic functions</title><link>https://casan.se/blog/nondeterministic-functions/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://casan.se/blog/nondeterministic-functions/</guid><description>In a previous post I talked about deterministic functions and some useful properties they have. I recommend you read that one first if you haven&amp;rsquo;t already. But deterministic functions aren&amp;rsquo;t all that useful to get tasks done. They only transform data from one form to another, but cannot actually read input from the console or even print to the console.</description></item><item><title>Bouncing balls simulation using X11</title><link>https://casan.se/blog/bouncing-balls-simulation-using-x11/</link><pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate><guid>https://casan.se/blog/bouncing-balls-simulation-using-x11/</guid><description>Recently I got the idea that I wanted to experiment with using X11 directly, instead of some higher-level library where buttons and fields already exist as objects. The goal was to get a better idea of how the graphics and window systems works in Linux (X11 specifically). This wasn&amp;rsquo;t a huge project and I only got to see parts of it before moving on, but it was a very interesting experience.</description></item><item><title>Functions: a deep dive</title><link>https://casan.se/blog/functions-a-deep-dive/</link><pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate><guid>https://casan.se/blog/functions-a-deep-dive/</guid><description>In this post we will take a closer look at functions and some mathematical concepts relating to them. This post assumes you are familiar working with functions in some programming language and some mathematical knowledge of functions as well (like knowing what \(y = f(x)\) means and what a set is).</description></item><item><title>Cellular automata</title><link>https://casan.se/blog/cellular-automata/</link><pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate><guid>https://casan.se/blog/cellular-automata/</guid><description>Cellular automata is way to model biological systems through a set of cells that change their state based on their surroundings [ 1]. It requires some form of grid to operate on, where each location on the grid contains one cell. The cells are based on integer coordinates on the grid.</description></item><item><title>Programming: how to learn it and how to get help.</title><link>https://casan.se/blog/programming-how-to-learn-it-and-how-to-get-help./</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://casan.se/blog/programming-how-to-learn-it-and-how-to-get-help./</guid><description>This article is intended to be read by someone who is looking to learn programming or is just starting out. This doesn&amp;rsquo;t tell you what programming language to choose or what tutorials to follow. Only some general tips to keep in mind when learning.
What is programming? # Many people think that programming is all about writing code.</description></item><item><title>Type inference with Hindley-Milner W algorithm</title><link>https://casan.se/blog/type-inference-with-hindley-milner-w-algorithm/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://casan.se/blog/type-inference-with-hindley-milner-w-algorithm/</guid><description>Introduction # The W algorithm developed by J. Hindley and R. Milner is used to infer the types of a programming language where no types have been explicitly written. Several functional languages today use this kind of inference, for exampel F# and Haskell (although Haskellers still like to write out the types).</description></item><item><title>Operators are functions too</title><link>https://casan.se/blog/operators-are-functions-too/</link><pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate><guid>https://casan.se/blog/operators-are-functions-too/</guid><description>Introduction # Most programming languages today have a bunch of operators for different purposes. Usually for mathematical, logical, comparison, and bitwise operations. +, -, *, /, &amp;amp;&amp;amp;, ||, exists in probably every modern language. Developers expect them to exist; no one would want to program without them.
Many languages like to extend their operators, usually +, to work on several types.</description></item><item><title>Static vs dynamic typing</title><link>https://casan.se/blog/static-vs-dynamic-typing/</link><pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate><guid>https://casan.se/blog/static-vs-dynamic-typing/</guid><description>Static and dynamic typing explained # Static typing can find type errors reliably at compile time, which should increase the reliability of the delivered program -- Wikipedia
A statically typed programming language checks that the types of everything matches. If something doesn&amp;rsquo;t match, the compiler stops and displays an error.</description></item><item><title>About Me</title><link>https://casan.se/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://casan.se/about/</guid><description>My name is Casper Andersson and I currently work as a software developer. I enjoy most types of non-UI programming. I am absolutely trash at doing pretty user interfaces and prefer my programs to stay within the terminal. Due to my job my interests currently lie in C programming and computer networks.</description></item></channel></rss>